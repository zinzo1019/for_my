spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.datasource.show-sql=true

spring.datasource.url=jdbc:postgresql://localhost:5432/test?currentSchema=third_project
spring.datasource.username=postgres
spring.datasource.password=a!05250525

# Hibernate
hiberante.dialect=org.hibernate.dialect.H2Dialect
hibernate.show_sql=true
hibernate.format_sql=true
hibernate.current_session_context_class=thread

spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.mvc.static-path-pattern=/static/**

# google social login registration
spring.security.oauth2.client.registration.google.client-id=584901529261-p0ka05djnn987k3be2jlr7iegi0md7fg.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email, profile
spring.profiles.include=oauth

# naver social login registration
spring.security.oauth2.client.registration.naver.client-id=JUqBXKnqT2QqAxhTsnSp
spring.security.oauth2.client.registration.naver.client-secret=SMdM3rBDhS
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8082/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email, name, nickname, gender, profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# google, facebook, twiter -> offer auto provider
# naver, kakao -> should custom provider !!

# naver social login provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# kakao social login registration
spring.security.oauth2.client.registration.kakao.client-id=ee0939dae829a6592004dcaa5196c13e
spring.security.oauth2.client.registration.kakao.client-secret=Z2qnpueD1aF0SCeXkyo3bCatd1Bg56KX
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8082/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, profile_image
spring.security.oauth2.client.registration.kakao.client-name=kakao-login

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
# kakao method post -> client_secret_post
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

IMAGE_PATH=../static/image/
FCM=FirebaseAdminKey.json
FCM_FULL_PATH=src/main/resources/FirebaseAdminKey.json
FIREBASE_VAPID_KEY=BEEj-sUx3CA9YK0VvFp1iHJ70PfvphGUA3OQiy9CaFHzZmSXnPaCRohRmwNn4xm-BmSBt1uVhpa4_jTnutKUyBE

server.port=8082